# Chrome Debugger WebSocket Proxy Configuration
# Handles dynamic port range 48000-49000 for Chrome Remote Interface
# Supports WebSocket upgrades with proper headers and error handling

# Upstream definitions for Chrome debugger instances
# These will be dynamically configured based on running Chrome instances
upstream chrome_debugger {
    # Keepalive connections for better performance
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
    
    # Default fallback - will be overridden by dynamic configuration
    server 127.0.0.1:48333 max_fails=3 fail_timeout=30s;
}

# Template server block for Chrome debugger proxy
# This configuration will be replicated for each port in range 48000-49000
server {
    # Listen on the same port as Chrome debugger
    listen 48333;
    server_name localhost;
    
    # Security and rate limiting
    limit_req zone=chrome_debug burst=20 nodelay;
    limit_conn chrome_conn 10;
    
    # Access logging for debugging
    access_log /var/log/nginx/chrome_proxy_access.log main;
    error_log /var/log/nginx/chrome_proxy_error.log;

    # Main proxy location for WebSocket connections
    location / {
        # WebSocket upgrade headers
        proxy_pass http://127.0.0.1:48333;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket specific timeouts
        proxy_connect_timeout 4s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings optimized for WebSocket
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Handle connection close gracefully
        proxy_set_header Connection "upgrade";
        
        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 /chrome_error.html;
        
        # CORS headers for browser access
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type 'text/plain; charset=utf-8' always;
            add_header Content-Length 0 always;
            return 204;
        }
    }

    # Health check endpoint for this Chrome instance
    location /health {
        access_log off;
        proxy_pass http://127.0.0.1:48333/json;
        proxy_connect_timeout 1s;
        proxy_send_timeout 1s;
        proxy_read_timeout 1s;
        
        # Return custom response if Chrome is not available
        error_page 502 503 504 = @chrome_unavailable;
    }

    # Chrome DevTools protocol endpoints
    location /json {
        proxy_pass http://127.0.0.1:48333/json;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # CORS headers for DevTools protocol
        add_header Access-Control-Allow-Origin * always;
        add_header Content-Type application/json always;
    }

    location /json/list {
        proxy_pass http://127.0.0.1:48333/json/list;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        add_header Access-Control-Allow-Origin * always;
        add_header Content-Type application/json always;
    }

    location /json/version {
        proxy_pass http://127.0.0.1:48333/json/version;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        add_header Access-Control-Allow-Origin * always;
        add_header Content-Type application/json always;
    }

    # WebSocket endpoint for DevTools
    location ~ ^/devtools/page/(.*)$ {
        proxy_pass http://127.0.0.1:48333/devtools/page/$1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # WebSocket timeouts
        proxy_connect_timeout 4s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_buffering off;
    }

    # Error page for Chrome unavailable
    location @chrome_unavailable {
        internal;
        return 503 '{"error": "Chrome debugger not available on port 48333", "status": 503}';
        add_header Content-Type application/json always;
    }

    # Custom error page for Chrome connection issues
    location = /chrome_error.html {
        internal;
        return 502 '<!DOCTYPE html>
<html>
<head>
    <title>Chrome Debugger Unavailable</title>
    <style>
        body { font-family: Arial, sans-serif; text-align: center; margin: 50px; }
        .error { color: #d32f2f; }
        .info { color: #1976d2; margin-top: 20px; }
    </style>
</head>
<body>
    <h1 class="error">Chrome Debugger Unavailable</h1>
    <p>The Chrome debugger instance on port 48333 is not responding.</p>
    <div class="info">
        <p>Possible solutions:</p>
        <ul style="text-align: left; display: inline-block;">
            <li>Start Chrome with remote debugging: <code>google-chrome --remote-debugging-port=48333 --headless</code></li>
            <li>Check if Chrome process is running: <code>ps aux | grep chrome</code></li>
            <li>Verify port is not blocked by firewall</li>
            <li>Check nginx error logs: <code>tail -f /var/log/nginx/chrome_proxy_error.log</code></li>
        </ul>
    </div>
</body>
</html>';
        add_header Content-Type text/html always;
    }
}